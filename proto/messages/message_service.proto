syntax = "proto3";

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "generic.proto";

package messages;

message StreamMessagesResponse {
  string uid = 1 [(google.api.field_behavior) = REQUIRED];
  string content = 2 [(google.api.field_behavior) = REQUIRED];
  string date = 3 [(google.api.field_behavior) = REQUIRED];
}
message CreateMessageRequest {
  string content = 1 [(google.api.field_behavior) = REQUIRED];
  string userId = 2 [(google.api.field_behavior) = REQUIRED];
}
message UpdateMessageRequest {
  string uid = 1 [(google.api.field_behavior) = REQUIRED];
  string content = 2 [(google.api.field_behavior) = REQUIRED];
}
message MessageRequest {
  string uid = 1 [(google.api.field_behavior) = REQUIRED];
}
message Message {
  string uid = 1 [(google.api.field_behavior) = REQUIRED];
  string content = 2 [(google.api.field_behavior) = REQUIRED];
  google.protobuf.Timestamp created_at = 3 [(google.api.field_behavior) = REQUIRED];
  google.protobuf.Timestamp updated_at = 4 [(google.api.field_behavior) = REQUIRED];
  google.protobuf.Timestamp deleted_at = 5;
}
message Messages {
  repeated Messages messages = 1 [(google.api.field_behavior) = REQUIRED];
}
message MessageMutateEvent {
  string id = 1 [(google.api.field_behavior) = REQUIRED, json_name="id"];
  common.MutateEventType type = 2 [(google.api.field_behavior) = REQUIRED, json_name="type"];
  Message body = 3 [json_name="body"];
}
service MessageService {
  rpc GetMessage (MessageRequest) returns (Message) {
    option (google.api.http) = {
      get: "/messages/{uid}"
    };}
  rpc GetMessages (google.protobuf.Empty) returns (Messages) {
    option (google.api.http) = {
      get: "/messages"
    };}
  rpc StreamMessages (google.protobuf.Empty) returns (stream MessageMutateEvent) {
    option (google.api.http) = {
      post: "/messages/streamed"
      body: "*"
    };
  }
  rpc CreateMessage (CreateMessageRequest) returns (Message) {
    option (google.api.http) = {
      post: "/messages"
      body: "*"
    };
  }
  rpc UpdateMessage (UpdateMessageRequest) returns (Message) {
    option (google.api.http) = {
      put: "/messages/{uid}"
      body: "*"
    };}
  rpc DeleteMessage (MessageRequest) returns (common.GenericResponse) {
    option (google.api.http) = {
      delete: "/messages/{uid}"
    };}
}